kind: Deployment
apiVersion: apps/v1
metadata:
  name: ${SERVICE_NAME}
  namespace: ${NAME_SPACE}
spec:
  replicas: 2
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      service: ${SERVICE_NAME}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  template:
    metadata:
      name: ${SERVICE_NAME}
      labels:
        service: ${SERVICE_NAME}
    spec:
      volumes:
      containers:
        - name: ${SERVICE_NAME}
          image: gcr.io/airasia-bee-prd/${SERVICE_NAME}:$ENVIRONMENT-$CIRCLE_SHA1
          imagePullPolicy: Always
          env:
            - name: NODE_ENV
              value: development
            - name: PORT
              value: '9050'
            - name: RABBITMQ_URI
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-secret
                  key: URI
            - name: AUTH_API
              value: 'http://cpos-microservice-management-auth'
            - name: SYSTEM_API
              value: 'http://cpos-microservice-management-system'
            - name: STORE_API
              value: 'http://cpos-microservice-management-store'
            - name: MENU_API
              value: 'http://cpos-microservice-management-menu'
            - name: DB_URI
              valueFrom:
                secretKeyRef:
                  key: URI
                  name: mongodb
          resources:
            requests:
              memory: '100Mi'
              cpu: '100m'
            limits:
              memory: '500Mi'
              cpu: '100m'
          ports:
            - name: http
              containerPort: 9050
          livenessProbe:
            httpGet:
              path: /healthz
              port: 9050
            initialDelaySeconds: 60
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /healthz
              port: 9050
            initialDelaySeconds: 60
            periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: ${SERVICE_NAME}
  namespace: ${NAME_SPACE}
  labels:
    service: ${SERVICE_NAME}
spec:
  ports:
    - name: http
      targetPort: 9050
      port: 80
  selector:
    service: ${SERVICE_NAME}
